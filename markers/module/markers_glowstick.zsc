const UAS_HDLD_GLOWSTICK = "gls";

class UaS_Glowstick : HDPickup {
	bool Activated, Thrown;
	DynamicLight GlowLight;
	UaS_Glowstick DroppedGlowStick;
	int spindir;
	int brightness;
	int age;

	Default {
		Inventory.PickupMessage "Picked up a glowstick.";
		Inventory.Icon "UGSIB0";
		HDPickup.Bulk 2;
		tag "Glowstick";
		HDPickup.refid UAS_HDLD_GLOWSTICK;
		-HDPickup.DropTranslation;
		+HDPickup.FitsInBackpack;
		+FLATSPRITE;
		+FORCEXYBILLBOARD;
		+INVENTORY.IGNORESKILL;
	}

	override void Tick() {
		super.Tick();
		if (isfrozen()) { return; }
		if (Thrown) {
			vel *= 5;
			vel.z += 5;
			Thrown = false;
		}
		switch(Activated) {
			case true:
				frame = 2;
				if (level.maptime % 5 == 0) { brightness = min(brightness + 1, 64); }
				if (level.maptime % 700 == 0) { age++; }
				if (!GlowLight) {
					GlowLight = DynamicLight(Actor.Spawn("UaS_GlowstickLight"));
					GlowLight.args[DynamicLight.LIGHT_RED] = 32;
					GlowLight.args[DynamicLight.LIGHT_GREEN] = 128;
					GlowLight.args[DynamicLight.LIGHT_BLUE] = 32;
				}
				GlowLight.args[DynamicLight.LIGHT_INTENSITY] = (brightness - age);
				if (owner) { GlowLight.target = owner; }
				else { GlowLight.target = self; }
				bFitsInBackpack = false;
				break;
			case false:
				frame = 1;
				if (GlowLight) { glowLight.Destroy(); }
				brightness = 0;
				age = 0;
				bFitsInBackpack = true;
				break;
		}

		// Use up when dead?
		if (Activated && (brightness - age) < 0) {
			Activated = false;
			if (GlowLight) { glowLight.Destroy(); }
			if (owner) { Amount--; }
			else { destroy(); }
		}

		A_SetAngle(angle + vel.length() * 3 * spindir);
	}

	override bool Use(bool pickup) {
		if (!Activated) {
			owner.A_StartSound("UaS/Glowstick", CHAN_AUTO, volume: 0.15);
			Activated = true;
			brightness = 1;
		} else { owner.DropInventory(self); }
		return false;
	}

	override inventory CreateTossable(int amt) {
		if (owner.player) Thrown = (owner.player.cmd.buttons&BT_ZOOM);
		DroppedGlowStick = null;
		DroppedGlowStick = UaS_Glowstick(super.CreateTossable(amt));
		if (DroppedGlowStick && Activated) {
			DroppedGlowStick.Activated = true;
			DroppedGlowstick.Brightness = Brightness;
			DroppedGlowstick.Age = Age;
			DroppedGlowstick.Spindir = randompick(-1,1);
			DroppedGlowstick.Thrown = Thrown;
			if(owner) { Activated = false; }
		}
		//Thrown = false;
		return DroppedGlowStick;
	}

	override void actualpickup(actor other){
		if(Activated)return;
		super.actualpickup(other);
	}

	states {
		Spawn:
			UGSI B -1;
			stop;
	}
}

class UaS_GlowstickLight : DynamicLight {
	override void Tick() {
		super.Tick();
		if (target) {
			SetOrigin((target.pos.x, target.pos.y, target.pos.z + target.height/2), true);
			Prev = target.Prev;
		}
	}
}

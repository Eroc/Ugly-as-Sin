extend class UaS_Scarcity_Handler {
	//Remover function which counts all of an item then only removes a set percentage
	void ExactScarcity(name checkClass, double targetPercent) {
		string dbgMsg = "Scarcity processing for "..CheckClass;
		array<Actor> thingArray;
		Actor nextThing;
		let thingCounter = ThinkerIterator.Create(CheckClass);
		while(nextThing = Actor(thingCounter.Next(false))) {
			// if(
				// nextThing.GetClassName() == CheckClass
				// && nextThing.special == 0
			// ) { thingArray.Push(nextThing); }
			thingArray.Push(nextThing);
		}

		int originalcount = thingArray.Size();
		if(originalcount <= 0) { return; }
		dbgMsg = dbgMsg.."\n\t• Count "..originalcount;

		int targetAmount = int(thingArray.Size() * targetPercent);
		while(thingArray.Size() > targetAmount) {
			// pick a random object from array
			int index = random(0, thingArray.Size()-1);
			inventory mo = inventory(thingArray[index]);
			dbgMsg = dbgMsg.."\n\t• For mo "..mo.GetClassName();

			//Find nearby mobs to the object
			let mobFinder = BlockThingsIterator.Create(mo, 512);
			array<HDMobBase> mobArray;
			// build a list of mobs
			while(mobFinder.Next()) {
				if(mobFinder.thing is 'HDMobBase') {
					mobArray.push(HDMobBase(mobFinder.thing));
				}
			}

			// Decide based on if mobs were found
			bool pickedUp = false;
			HDMobBase mb;
			if (mobArray.Size()>0) {
				int mobIndex = random(0, mobArray.Size()-1); // pick a random mob from the array
				mb = mobArray[mobIndex];
				if (mb && mo) {
					//Move item to mob's array
					mo.setorigin(mb.pos,false);
					dbgMsg = dbgMsg.."moved to "..mb.GetClassName();
					pickedUp = mo.CallTryPickup(mb);
				}
			}

			if (pickedUp) {
				//UaS.LogDebug(DBG_Scarcity, string.format("Added "..mo.getclassname().." to "..mb.getclassname()));
			}
			else {
				//UaS.LogDebug(DBG_Scarcity, string.format("Modified or removed "..mo.getclassname()));
				//DoReplacement(thingArray[index]);
				//thingArray[index].destroy();
			}
			thingArray.Delete(index);
		}

		//UaS.LogDebug(DBG_Scarcity, string.format(checkClass.." %i, %i, %i", originalcount, ThingArray.Size(), targetAmount));
		UaS.LogDebug(DBG_Scarcity, string.format(dbgMsg));
		thingArray.Clear();
	}
}

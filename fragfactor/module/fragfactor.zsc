class UaS_FragRemovalHandler : EventHandler {
	override void WorldThingSpawned(WorldEvent e) {
		if(!e.Thing) { return; }
		if(UaS_FragSpawnRate == 100) { return; }
		double removeChance = 1.0 - (double(UaS_FragSpawnRate) * 0.01);
		if (e.thing is "BFGNecroShard" && UaS.RandomChance(removeChance)) {
			UaS.LogDebug(DBG_Frag, string.format("%s despawned %f", e.Thing.GetClassName(), removeChance));
			e.Thing.Destroy();
		}
	}

	override void NetworkProcess(ConsoleEvent e) {
		if(e.Name ~== "UaS_RemoveFrag") {
			int RemovedShards = RemoveLevelFrag();
			console.printf("Removed "..RemovedShards.." frag shards.");
		}
	}

	int RemoveLevelFrag() {
		int count = 0;
		//let iterator1 = ThinkerIterator.Create("FragShard");
		//for (Thinker mo; (mo = iterator1.Next());) { mo.Destroy(); count++; }
		let iterator2 = ThinkerIterator.Create("BFGNecroShard");
		for (Thinker mo; (mo = iterator2.Next());) { mo.Destroy(); count++;}
		//let iterator3 = ThinkerIterator.Create("NecroShard");
		//for (Thinker mo; (mo = iterator3.Next());) { mo.Destroy(); count++;}
		//let iterator4 = ThinkerIterator.Create("NecroGhostShard");
		//for (Thinker mo; (mo = iterator4.Next());) { mo.Destroy(); count++;}
		return count;
	}
}
